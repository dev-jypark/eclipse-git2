<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/share/**" location="file:///D:/FridgPro/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/FridgeProj/upload/share/"/>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="order" value="3" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- webapp의 어느 디렉토리에 스태틱 리소스(이미지,.css,.js등)를 두더라도 읽어 올수 있도록 설정하는 부분-->
	<default-servlet-handler/> 
	
	<context:property-placeholder
		location="classpath:fridge/share.properties" />
	
	<!-- 스프링 프레임 워크에서 파일 업로드를 위한 API id는 반드시 multipartResolver로 지정 왜냐하면 파일업로드와 
		관련된 스프링의 다른 클래스들이 multipartResolver란 이름으로 참조하여 사용함으로...... -->
	<!-- 최대 업로드 용량 사이즈 설정:maxUploadSize속성(바이트) -1:무제한 -->
	<!-- 용량 초과시 org.springframework.web.multipart.MaxUploadSizeExceededException 
		예외 발생 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="209715200" />
		<!-- 20M로 설정 -->
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath = new String("업로드 경로") -->
	<beans:bean id="uploadPath" class="java.lang.String">
	    <!-- 파일업로드 디렉토리-->
	    <beans:constructor-arg value="D:\gm\teamProj\profile_img"/>
	</beans:bean>
	
	<!-- 웹소켓 서버용 빈 등록 -->
	<beans:bean id="chatServer"
		class="com.kosmo.fridge.web.ChatServer"></beans:bean>
	<!-- 웹소켓 서버와 클라이언트에서 접속하는 path와 매핑:엔드포인트 설정 -->
	<websocket:handlers allowed-origins="*">
		<websocket:mapping handler="chatServer"
			path="/chat-ws.do" />
	</websocket:handlers>
	
	<!-- tiles사용을 위한 bean등록 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/views/template/layouts.xml</beans:value>				
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- tiles를 처리하도록 또 다른 뷰리졸버 등록 -->
	<beans:bean
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="order" value="2" /><!-- .jsp도 view로 사용하기 위해 우선순위를 가장먼저-->		
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</beans:bean>
	
	<context:component-scan base-package="com.kosmo.fridge" />
	<context:property-placeholder
		location="classpath:fridge/resource/fridgelist.properties"/>
		
</beans:beans>
